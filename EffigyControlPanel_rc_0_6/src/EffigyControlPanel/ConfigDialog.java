package EffigyControlPanel;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author jody
 */
public class ConfigDialog extends javax.swing.JDialog {

    String fileSeparator = System.getProperty("file.separator");
    String srcDir = System.getProperty("user.dir");
    String dataDir = srcDir + fileSeparator + "data" + fileSeparator;
    Property config;
    
    // sysex message stuff
    String sysexHeaderTxt = "F0 00 02 21 ";
    String sysexDelimiterTxt = " F7"; 
    byte[] sysexHeader = { (byte) 0xF7, (byte) 0x00, (byte) 0x02, (byte) 0x21 };
    byte[] sysexDelimiter = { (byte) 0xF7 };
    boolean isPresetLoaded = false;
    Bank ConfigBank;
    Pedal ConfigPedal;
    
    /**
     * Creates new form ConfigDialog
     * @param parent
     * @param modal
     * @param currentBank
     */
    public ConfigDialog(java.awt.Frame parent, boolean modal, Bank mainBank, Pedal pedal) {
        
        super(parent, modal);
        initComponents();
 
        // pedal and pedal bank given to this, including theiir connection status.
        ConfigBank = mainBank;
        ConfigPedal = pedal;
//        txtBuffer.setText("1234");

        // text of bank
        if(chkAnnotated.isSelected()) {
            txtBuffer.setText(ConfigBank.toFormattedString());            
        } else {
            txtBuffer.setText(ConfigBank.toString());            
        }
        txtBuffer.setCaretPosition(0); // go home, or turn autoscroll off on the text area control

        // properties access
        config = new Property(dataDir+"config.txt");
        chkLoadLastBank.setSelected(config.getBool("loadLastBank"));
        chkLoadBgImage.setSelected(config.getBool("loadBgImage"));
        //chkAutoPedalConnect.setSelected(config.getBool("autoConnect"));

        System.out.println(ConfigBank.status);

        if(!ConfigPedal.api.connected) {
            ConfigPedal.api.discoverPedal(); // try to connect if not already connected.
            txtActionStatus.setText(ConfigPedal.api.status);
        }

        updateIcon();
        
         if(ConfigPedal.api.connected) {
            txtStatus.setText("connected");
             String ver = pedal.api.getSwVer();// software version
             lblSwVersion.setText(ConfigPedal.api.swVersion);
             lblSerialNumber.setText((Integer.toString(ConfigPedal.sysblk.serialNumber)));

         } else {
            txtStatus.setText("not connected");
         }


    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        butGrpKnobFllip = new javax.swing.ButtonGroup();
        jPanel2 = new TransparentPanel();
        jLabel26 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        spnSetLoadPreset = new javax.swing.JSpinner();
        butSetBrightness = new javax.swing.JButton();
        spnSetBootPreset = new javax.swing.JSpinner();
        butSetBootMode = new javax.swing.JButton();
        butRebootPedal = new javax.swing.JButton();
        spnSetBootMode = new javax.swing.JSpinner();
        butRecalibrate = new javax.swing.JButton();
        butSetSensitivity = new javax.swing.JButton();
        spnSetPorch = new javax.swing.JSpinner();
        butSetBootPreset = new javax.swing.JButton();
        spnSetCeiling = new javax.swing.JSpinner();
        butHitModeSwitch = new javax.swing.JButton();
        butSetCeiling = new javax.swing.JButton();
        spnBrightness = new javax.swing.JSpinner();
        butSetPorch = new javax.swing.JButton();
        spnSetSensitivity = new javax.swing.JSpinner();
        spnRecalibrate = new javax.swing.JSpinner();
        butSetKnobMode = new javax.swing.JButton();
        spnHitModeSwitch = new javax.swing.JSpinner();
        butSetLoadPreset = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        radSensitivity = new javax.swing.JRadioButton();
        radPos4 = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        butRefresh = new javax.swing.JButton();
        txtStatus = new javax.swing.JLabel();
        lblBlueLED = new javax.swing.JLabel();
        txtStatus1 = new javax.swing.JLabel();
        txtStatus2 = new javax.swing.JLabel();
        lblSwVersion = new javax.swing.JLabel();
        lblSerialNumber = new javax.swing.JLabel();
        chkLoadLastBank = new javax.swing.JCheckBox();
        chkLoadBgImage = new javax.swing.JCheckBox();
        butApiSend1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        butVerifyBank = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        butCopyToClipboard = new javax.swing.JButton();
        chkAnnotated = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtBuffer = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        txtActionStatus = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        txtApiCmd = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0,0,0,0.15f));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        jPanel2.setOpaque(false);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel26.setText("Pedal Control and Settings");

        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        spnSetLoadPreset.setModel(new javax.swing.SpinnerNumberModel(0, 0, 4, 1));

        butSetBrightness.setText("Set Brightness%");
        butSetBrightness.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSetBrightnessActionPerformed(evt);
            }
        });

        spnSetBootPreset.setModel(new javax.swing.SpinnerNumberModel(0, 0, 4, 1));

        butSetBootMode.setText("Set Boot Mode");
        butSetBootMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSetBootModeActionPerformed(evt);
            }
        });

        butRebootPedal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butRebootPedal.setForeground(new java.awt.Color(255, 0, 0));
        butRebootPedal.setText("Reboot");
        butRebootPedal.setToolTipText("Send reboot command to pedal");
        butRebootPedal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRebootPedalActionPerformed(evt);
            }
        });

        spnSetBootMode.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));

        butRecalibrate.setText("Recalibrate");
        butRecalibrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRecalibrateActionPerformed(evt);
            }
        });

        butSetSensitivity.setText("Set Sensitivity %");
        butSetSensitivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSetSensitivityActionPerformed(evt);
            }
        });

        spnSetPorch.setModel(new javax.swing.SpinnerNumberModel(5, 0, 127, 1));

        butSetBootPreset.setText("Set Boot Preset#");
        butSetBootPreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSetBootPresetActionPerformed(evt);
            }
        });

        spnSetCeiling.setModel(new javax.swing.SpinnerNumberModel(100, 0, 127, 1));

        butHitModeSwitch.setText("Hit Mode Switch");
        butHitModeSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butHitModeSwitchActionPerformed(evt);
            }
        });

        butSetCeiling.setText("Set Ceiling Size");
        butSetCeiling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSetCeilingActionPerformed(evt);
            }
        });

        spnBrightness.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        butSetPorch.setText("Set Porch Size");
        butSetPorch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSetPorchActionPerformed(evt);
            }
        });

        spnSetSensitivity.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        spnRecalibrate.setModel(new javax.swing.SpinnerNumberModel(25, 0, 127, 1));

        butSetKnobMode.setText("Set Knob Mode");
        butSetKnobMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSetKnobModeActionPerformed(evt);
            }
        });

        spnHitModeSwitch.setModel(new javax.swing.SpinnerNumberModel(0, 0, 3, 1));

        butSetLoadPreset.setText("Set Load Preset#");
        butSetLoadPreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butSetLoadPresetActionPerformed(evt);
            }
        });

        jLabel9.setText("0=user select, 1-3=select now");

        jLabel10.setText("0=default, 1-50 x100 samples");

        jLabel11.setText("LED Max Fade/Blink Brightness");

        jLabel12.setText("Virtual Sensitivity Knob 0-100%");

        jLabel13.setText("0-127, - full gate stiffness");

        jLabel14.setText("0-127, - open gate firmness");

        jLabel15.setText("0=mode select, 1-3 selects mode");

        butGrpKnobFllip.add(radSensitivity);
        radSensitivity.setText("Sensitivity");
        radSensitivity.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        radSensitivity.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        radSensitivity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radSensitivityActionPerformed(evt);
            }
        });

        butGrpKnobFllip.add(radPos4);
        radPos4.setText("Position 4");
        radPos4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radPos4ActionPerformed(evt);
            }
        });

        jLabel17.setText("Load Preset in Pedal now");

        jLabel18.setText("Preset to load when Pedal boots");

        butRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EffigyControlPanel/refresh-tiny.gif"))); // NOI18N
        butRefresh.setText("Pedal Reconnect");
        butRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRefreshActionPerformed(evt);
            }
        });

        txtStatus.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtStatus.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtStatus.setText("Not Connected");
        txtStatus.setToolTipText("Pedal Status text");

        lblBlueLED.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EffigyControlPanel/icon_gray16.png"))); // NOI18N

        txtStatus1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtStatus1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtStatus1.setText("Software Version:");
        txtStatus1.setToolTipText("Pedal Status text");

        txtStatus2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        txtStatus2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtStatus2.setText("Serial Number:");
        txtStatus2.setToolTipText("Pedal Status text");

        lblSwVersion.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblSwVersion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSwVersion.setText("-");
        lblSwVersion.setToolTipText("Pedal Status text");

        lblSerialNumber.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        lblSerialNumber.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblSerialNumber.setText("-");
        lblSerialNumber.setToolTipText("Pedal Status text");

        chkLoadLastBank.setText("Automatically load last Bank");
        chkLoadLastBank.setToolTipText("If Pedal is not connected on app start, load the last bank edited in the previous session");
        chkLoadLastBank.setActionCommand("llb");
        chkLoadLastBank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLoadLastBankActionPerformed(evt);
            }
        });

        chkLoadBgImage.setText("Show Pedal Image background");
        chkLoadBgImage.setToolTipText("Show image of Pedal as background for main app screen");
        chkLoadBgImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkLoadBgImageActionPerformed(evt);
            }
        });

        butApiSend1.setBackground(new java.awt.Color(255, 255, 255));
        butApiSend1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        butApiSend1.setForeground(new java.awt.Color(0, 0, 204));
        butApiSend1.setText("Close");
        butApiSend1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butApiSend1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(butRebootPedal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkLoadLastBank)
                            .addComponent(chkLoadBgImage)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtStatus1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(butRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtStatus2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(butHitModeSwitch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(butRecalibrate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(butSetBrightness, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(butSetKnobMode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(7, 7, 7)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lblBlueLED)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtStatus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(butApiSend1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(spnSetBootPreset, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(radSensitivity)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radPos4))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(spnRecalibrate, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(spnSetSensitivity, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(spnBrightness))
                                            .addComponent(spnSetCeiling, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(spnSetPorch, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(spnSetBootMode, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(spnSetLoadPreset, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(spnHitModeSwitch, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel17)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblSerialNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                            .addComponent(lblSwVersion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(0, 10, Short.MAX_VALUE))))
                    .addComponent(butSetSensitivity, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butSetCeiling, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butSetPorch, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butSetBootMode, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butSetLoadPreset, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butSetBootPreset, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtStatus)
                    .addComponent(lblBlueLED)
                    .addComponent(butRefresh)
                    .addComponent(butApiSend1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtStatus1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtStatus2)
                            .addComponent(lblSerialNumber)))
                    .addComponent(lblSwVersion))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butHitModeSwitch)
                    .addComponent(jLabel9)
                    .addComponent(spnHitModeSwitch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spnRecalibrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(butRecalibrate))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spnBrightness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butSetBrightness)
                    .addComponent(jLabel11))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel12))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spnSetSensitivity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(butSetSensitivity))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butSetCeiling)
                    .addComponent(jLabel13)
                    .addComponent(spnSetCeiling, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butSetPorch)
                    .addComponent(spnSetPorch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butSetBootMode)
                    .addComponent(spnSetBootMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butSetLoadPreset))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(spnSetLoadPreset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(4, 4, 4)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butSetBootPreset)
                    .addComponent(spnSetBootPreset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radPos4)
                    .addComponent(radSensitivity)
                    .addComponent(butSetKnobMode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(chkLoadLastBank)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkLoadBgImage))
                    .addComponent(butRebootPedal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        butVerifyBank.setText("Verify");
        butVerifyBank.setToolTipText("Verify Bank Data");
        butVerifyBank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butVerifyBankActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel1.setText("Bank data");

        butCopyToClipboard.setText("to Clipboard");
        butCopyToClipboard.setToolTipText("Copy Bank Text to Clipboard");
        butCopyToClipboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCopyToClipboardActionPerformed(evt);
            }
        });

        chkAnnotated.setText("Annotate");
        chkAnnotated.setToolTipText("Toggle between Knob as Sensitivity Control or Position 4");
        chkAnnotated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAnnotatedActionPerformed(evt);
            }
        });

        txtBuffer.setBackground(new java.awt.Color(51, 51, 51));
        txtBuffer.setColumns(2);
        txtBuffer.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txtBuffer.setForeground(new java.awt.Color(255, 255, 255));
        txtBuffer.setLineWrap(true);
        txtBuffer.setRows(5);
        txtBuffer.setText("Bank Data is Displayed Here");
        txtBuffer.setToolTipText("contents of current bank");
        txtBuffer.setWrapStyleWord(true);
        txtBuffer.setDragEnabled(true);
        txtBuffer.setName("txtBuffer"); // NOI18N
        txtBuffer.setSelectedTextColor(new java.awt.Color(255, 255, 0));
        txtBuffer.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtBufferPropertyChange(evt);
            }
        });
        jScrollPane1.setViewportView(txtBuffer);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(chkAnnotated)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butVerifyBank)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(butCopyToClipboard)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butCopyToClipboard)
                    .addComponent(butVerifyBank)
                    .addComponent(chkAnnotated)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        txtActionStatus.setBackground(new java.awt.Color(0, 0, 0));
        txtActionStatus.setText("no action performed");
        txtActionStatus.setToolTipText("Action Status, whatever the app just did");

        jLabel30.setBackground(new java.awt.Color(0, 0, 0));
        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel30.setText("Action:");

        txtApiCmd.setBackground(new java.awt.Color(0, 0, 0));
        txtApiCmd.setText("None");
        txtApiCmd.setToolTipText("API command send to Pedal");

        jLabel25.setBackground(new java.awt.Color(0, 0, 0));
        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel25.setText("API Cmd:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtActionStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtApiCmd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtApiCmd))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(txtActionStatus))
                .addGap(5, 5, 5))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addGap(320, 320, 320))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void updateIcon() {
         if (ConfigPedal.api.connected) {
            String imageName = "icon_blue16.png";
            ImageIcon icon = new ImageIcon(imageName);
            icon.getImage().flush();
            lblBlueLED.setIcon(icon);
            }
         else { // pedal is not connected  
            // LED status          
            String imageName = "icon_gray16.png";
            ImageIcon icon = new ImageIcon(imageName);
            icon.getImage().flush();
            lblBlueLED.setIcon(icon);
        }
        txtActionStatus.setText(ConfigPedal.api.status);
    }


    private void chkLoadLastBankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLoadLastBankActionPerformed
        if(chkLoadLastBank.isSelected()) {
            config.setBool("loadLastBank",true);
            config.setString("lastBank", ConfigBank.bankName);
            System.out.println("setting loadLastBank on, last bank name="+ConfigBank.bankName);
            txtActionStatus.setText("setting loadLastBank on, last bank name="+ConfigBank.bankName);
        } else {
            config.setBool("loadLastBank",false);
            System.out.println("setting loadLastBank off");
            txtActionStatus.setText("setting loadLastBank off");
        }
    }//GEN-LAST:event_chkLoadLastBankActionPerformed

    private void chkLoadBgImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkLoadBgImageActionPerformed
        config = new Property(dataDir+"config.txt");
        if(chkLoadBgImage.isSelected()) {
            config.setBool("loadBgImage",true);
            System.out.println("setting load bg image on");
            txtActionStatus.setText("setting load background image on");
        } else {
            config.setBool("loadBgImage",false);
            System.out.println("setting load bg image on");
            txtActionStatus.setText("setting load background image off");
        }
    }//GEN-LAST:event_chkLoadBgImageActionPerformed

    private void txtBufferPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtBufferPropertyChange
    }//GEN-LAST:event_txtBufferPropertyChange

    private void butApiSend1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butApiSend1ActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_butApiSend1ActionPerformed

    private void butRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRefreshActionPerformed
     ConfigPedal.api.discoverPedal();
     txtActionStatus.setText(ConfigPedal.api.status);
     updateIcon();
        if(ConfigPedal.api.connected) {
            lblSwVersion.setText(ConfigPedal.swVersion);
            lblSerialNumber.setText((String.valueOf(ConfigPedal.sysblk.serialNumber)));
        }
    }//GEN-LAST:event_butRefreshActionPerformed

    private void radSensitivityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radSensitivityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radSensitivityActionPerformed

    private void butSetLoadPresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSetLoadPresetActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }
        ConfigPedal.api.setPresetToLoad((int) spnSetLoadPreset.getValue());            
    }//GEN-LAST:event_butSetLoadPresetActionPerformed

    private void butSetKnobModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSetKnobModeActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }
        
        if(radSensitivity.isSelected()) {
            ConfigPedal.api.setKnobMode(0);
        }
        if(radPos4.isSelected()) {
           ConfigPedal.api.setKnobMode(1);
        }
    }//GEN-LAST:event_butSetKnobModeActionPerformed

    private void butHitModeSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butHitModeSwitchActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }
        if(spnHitModeSwitch.getValue().equals(0)) {
            ConfigPedal.api.enterModeSwitch();
        } else {
            ConfigPedal.api.setMode((int) spnHitModeSwitch.getValue());            
        }
        txtActionStatus.setText(ConfigPedal.api.status);
    }//GEN-LAST:event_butHitModeSwitchActionPerformed

    private void butSetBootPresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSetBootPresetActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }
        ConfigPedal.api.setPresetToLoad((int) spnSetBootPreset.getValue());            
    }//GEN-LAST:event_butSetBootPresetActionPerformed

    private void butSetSensitivityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSetSensitivityActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }
        ConfigPedal.api.setSensitivity((int) spnSetSensitivity.getValue());            

    }//GEN-LAST:event_butSetSensitivityActionPerformed

    private void butRecalibrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRecalibrateActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }

        if(spnRecalibrate.getValue().equals(0)) {
            ConfigPedal.api.recalibrate();        
        } else {
            ConfigPedal.api.recalibrate((int) spnRecalibrate.getValue());            
        }
    }//GEN-LAST:event_butRecalibrateActionPerformed

    private void butRebootPedalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRebootPedalActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }
        // confirm reboot - 
        Object[] options = {"Reboot", "Cancel"};
        int n = JOptionPane.showOptionDialog(new JOptionPane(),
                "Confirm Reboot Now",
                "Reboot Now",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, //do not use a custom Icon
                options, //the titles of buttons
                options[0]); //default button title
        switch (n) {
            case 0: // delete,
                ConfigPedal.api.reboot();
                break;
            default:
        }
    }//GEN-LAST:event_butRebootPedalActionPerformed

    private void butSetBootModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSetBootModeActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }
        ConfigPedal.api.setBootMode((int) spnSetBootMode.getValue());            
    }//GEN-LAST:event_butSetBootModeActionPerformed

    private void butSetBrightnessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSetBrightnessActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }
        ConfigPedal.api.setBrightness((int) spnBrightness.getValue());            
    }//GEN-LAST:event_butSetBrightnessActionPerformed

    private void chkAnnotatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAnnotatedActionPerformed
        if(chkAnnotated.isSelected()) {
            txtBuffer.setText(ConfigBank.toFormattedString());            
        } else {
            txtBuffer.setText(ConfigBank.toString());            
        }
        txtBuffer.setCaretPosition(0);

    }//GEN-LAST:event_chkAnnotatedActionPerformed

    private void butVerifyBankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butVerifyBankActionPerformed
        // verify the bank:
        Bank tBank = new Bank();
        tBank.importArr(tBank.convertTextToByteArr(txtBuffer.getText()), 0); // zero offset because there is already no sysex header or footer in ther
        tBank.bankName="tmpBank";
        tBank.fileName = dataDir + tBank.bankName + ".ecp";
        String verRes = tBank.verifyBank(tBank.fileName,true);
        JOptionPane.showMessageDialog(null, verRes);
        tBank.deleteBank();
    }//GEN-LAST:event_butVerifyBankActionPerformed

    private void butCopyToClipboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCopyToClipboardActionPerformed
             // Create a Clipboard object using getSystemClipboard() method
            TextTransfer clipOut = new TextTransfer();
            clipOut.setClipboardContents(txtBuffer.getText());
            String msgTxt = "copied "+txtBuffer.getText().length()+" bytes to clipboard";
            JOptionPane.showMessageDialog(null,msgTxt);
    }//GEN-LAST:event_butCopyToClipboardActionPerformed

    private void butSetCeilingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSetCeilingActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }
        ConfigPedal.api.setCeilingSize((int) spnSetCeiling.getValue());            
    }//GEN-LAST:event_butSetCeilingActionPerformed

    private void butSetPorchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butSetPorchActionPerformed
        if(!ConfigPedal.api.connected) {
            JOptionPane.showMessageDialog(null, "Pedal is not connected.");
            return;
        }
        ConfigPedal.api.setPorchSize((int) spnSetPorch.getValue());            
    }//GEN-LAST:event_butSetPorchActionPerformed

    private void radPos4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radPos4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radPos4ActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butApiSend1;
    private javax.swing.JButton butCopyToClipboard;
    private javax.swing.ButtonGroup butGrpKnobFllip;
    private javax.swing.JButton butHitModeSwitch;
    private javax.swing.JButton butRebootPedal;
    private javax.swing.JButton butRecalibrate;
    private javax.swing.JButton butRefresh;
    private javax.swing.JButton butSetBootMode;
    private javax.swing.JButton butSetBootPreset;
    private javax.swing.JButton butSetBrightness;
    private javax.swing.JButton butSetCeiling;
    private javax.swing.JButton butSetKnobMode;
    private javax.swing.JButton butSetLoadPreset;
    private javax.swing.JButton butSetPorch;
    private javax.swing.JButton butSetSensitivity;
    private javax.swing.JButton butVerifyBank;
    private javax.swing.JCheckBox chkAnnotated;
    private javax.swing.JCheckBox chkLoadBgImage;
    private javax.swing.JCheckBox chkLoadLastBank;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBlueLED;
    private javax.swing.JLabel lblSerialNumber;
    private javax.swing.JLabel lblSwVersion;
    private javax.swing.JRadioButton radPos4;
    private javax.swing.JRadioButton radSensitivity;
    private javax.swing.JSpinner spnBrightness;
    private javax.swing.JSpinner spnHitModeSwitch;
    private javax.swing.JSpinner spnRecalibrate;
    private javax.swing.JSpinner spnSetBootMode;
    private javax.swing.JSpinner spnSetBootPreset;
    private javax.swing.JSpinner spnSetCeiling;
    private javax.swing.JSpinner spnSetLoadPreset;
    private javax.swing.JSpinner spnSetPorch;
    private javax.swing.JSpinner spnSetSensitivity;
    private javax.swing.JLabel txtActionStatus;
    private javax.swing.JLabel txtApiCmd;
    private javax.swing.JTextArea txtBuffer;
    private javax.swing.JLabel txtStatus;
    private javax.swing.JLabel txtStatus1;
    private javax.swing.JLabel txtStatus2;
    // End of variables declaration//GEN-END:variables
}
